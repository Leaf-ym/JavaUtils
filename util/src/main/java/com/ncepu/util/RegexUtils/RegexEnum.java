package com.ncepu.util.RegexUtils;

/**
 * @author wengym
 * @version 1.0
 * @desc 正则表达式枚举类
 * @date 2023/7/27 9:03
 */
public enum RegexEnum {
    /**
     * 多个空格
     */
    MULTIPLE_SPACE("多个空格", "\\s+"),
    /**
     * ^：匹配字符串的开始位置
     * $：匹配字符串的结束位置
     * *：匹配前一个字符0次或n次
     * +：匹配前一个字符1次或n次
     * {n, m}：匹配前一个字符至少n次，且最多匹配m次
     * x|y：匹配x或y
     * [a-z]：表示某个范围内的字符。与指定区间内的任何字符匹配。
     */
    EMAIL("电子邮箱", "^[a-zA-Z0-9_-]+@[a-zA-Z0-9_-]+(\\.[a-zA-Z0-9_-]+)+$"),
    /**
     * 18位身份证号
     * xxxxxx yyyy MM dd 375 0 十八位
     * yy MM dd 750 十五位XXXXXX
     * 地区:[1-9][0-9][5]
     * 年的前两位:(18119|20) //18-20
     * 年的后两位: [0-9][2] //00-99
     * 月份:((0[1-9])1(10111112)) //01-12
     * 天数:(([O-2][1-9])11|20]30]31) //1-31 这里无法对二月份特殊处理
     * 18位身份证三位顺序码: [0-9][3) //000-999
     * 15位身份证两位顺序码: [0-9](2) //00-99
     * 校验码: 15位身份证号: [0-9]，18位则是:([O-9](Xx)) //18位才会出现Xx
     * ps:这里对数字的处理都是使用O-9] 代替了“n”避免编译出错
     */
    ID_CARD_18("18位身份证号", "^[1-9][0-9]{5}(18|19|20)[0-9]{2}((0[1-9])|(10|11|12))(([0-2][1-9])|10|20|30|31)[0-9]{3}([0-9]|(X|x))"),
    /**
     * 15位身份证号
     */
    ID_CARD_15("15位身份证号", "^[1-9][0-9]{5}[0-9]{2}((0[1-9])|(10|11|12))(([0-2][1-9])|10|20|30|31)[0-9]{2}[0-9]"),
    /**
     * 1开头的11位数
     */
    CELL_PHONE("手机号", "1[0-9]{10}");

    private String label;
    private String value;

    RegexEnum(String label, String value) {
        this.label = label;
        this.value = value;
    }

    public String getLabel() {
        return label;
    }

    public String getValue() {
        return value;
    }
}
